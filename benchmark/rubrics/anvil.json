{
  "repo": "anvil",
  "tests": [
    {
      "id": "check_rust_tools",
      "type": "commands_exist",
      "params": {
        "names": ["rustc", "cargo"]
      },
      "score": 3
    },
    {
      "id": "check_system_tools",
      "type": "commands_exist",
      "params": {
        "names": ["git", "curl", "wget", "unzip", "pkg-config"]
      },
      "score": 2
    },
    {
      "id": "check_python_tools",
      "type": "commands_exist",
      "params": {
        "names": ["python3", "pip3"]
      },
      "score": 2
    },
    {
      "id": "check_kubernetes_tools",
      "type": "commands_exist",
      "params": {
        "names": ["kubectl", "minikube"]
      },
      "score": 2
    },
    {
      "id": "check_rust_version",
      "type": "output_contains",
      "params": {
        "command": "rustc --version",
        "contains": ["rustc"]
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_rust_tools"]
    },
    {
      "id": "check_cargo_version",
      "type": "output_contains",
      "params": {
        "command": "cargo --version",
        "contains": ["cargo"]
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_rust_tools"]
    },
    {
      "id": "check_rust_target",
      "type": "output_contains",
      "params": {
        "command": "rustup target list --installed",
        "contains": ["x86_64-unknown-linux-gnu"]
      },
      "timeout": 15,
      "score": 1,
      "requires": ["check_rust_tools"]
    },
    {
      "id": "check_kubectl_version",
      "type": "run_command",
      "params": {
        "command": "kubectl version --client"
      },
      "timeout": 15,
      "score": 1,
      "requires": ["check_kubernetes_tools"]
    },
    {
      "id": "check_minikube_version",
      "type": "run_command",
      "params": {
        "command": "minikube version"
      },
      "timeout": 15,
      "score": 1,
      "requires": ["check_kubernetes_tools"]
    },
    {
      "type": "files_exist",
      "params": {
        "paths": [
          "Cargo.toml",
          "README.md",
          "build.md"
        ]
      },
      "score": 2
    },
    {
      "type": "dirs_exist",
      "params": {
        "paths": [
          "src",
          "deploy",
          "e2e",
          "docker",
          "tools",
          "doc"
        ]
      },
      "score": 3
    },
    {
      "id": "check_anvil_project",
      "type": "file_contains",
      "params": {
        "path": "Cargo.toml",
        "contains": ["verifiable-controllers"]
      },
      "score": 2
    },
    {
      "id": "check_rust_edition",
      "type": "file_contains",
      "params": {
        "path": "Cargo.toml",
        "contains": ["edition = \"2021\""]
      },
      "score": 1
    },
    {
      "id": "check_package_name",
      "type": "file_contains",
      "params": {
        "path": "Cargo.toml",
        "contains": ["name = \"verifiable-controllers\""]
      },
      "score": 1
    },
    {
      "type": "files_exist",
      "params": {
        "paths": [
          "build.sh",
          "deploy.sh",
          "local-test.sh"
        ]
      },
      "score": 2
    },
    {
      "type": "dirs_exist",
      "params": {
        "paths": [
          "src/reconciler",
          "src/shim_layer",
          "src/kubernetes_cluster",
          "src/kubernetes_api_objects",
          "src/state_machine",
          "src/temporal_logic",
          "src/deps_hack",
          "src/controller_examples"
        ]
      },
      "score": 3
    },
    {
      "type": "dirs_exist",
      "params": {
        "paths": [
          "docker/controller"
        ]
      },
      "score": 1
    },
    {
      "type": "files_exist",
      "params": {
        "paths": [
          "docker/controller/Dockerfile.local",
          "docker/controller/Dockerfile.remote"
        ]
      },
      "score": 2
    },
    {
      "type": "dirs_exist",
      "params": {
        "paths": [
          "e2e/src"
        ]
      },
      "score": 1
    },
    {
      "id": "check_cargo_dependencies",
      "type": "file_contains",
      "params": {
        "path": "Cargo.toml",
        "contains": ["builtin", "builtin_macros", "vstd"]
      },
      "score": 3
    },
    {
      "id": "check_additional_dependencies",
      "type": "file_contains",
      "params": {
        "path": "Cargo.toml",
        "contains": ["tungstenite", "rand"]
      },
      "score": 1
    },
    {
      "id": "check_build_script_executable",
      "type": "run_command",
      "params": {
        "command": "[ -x build.sh ]"
      },
      "timeout": 5,
      "score": 1
    },
    {
      "id": "check_verus_reference",
      "type": "file_contains",
      "params": {
        "path": "build.sh",
        "contains": ["VERUS_DIR"]
      },
      "score": 2
    },
    {
      "id": "check_anvil_readme",
      "type": "file_contains",
      "params": {
        "path": "README.md",
        "contains": ["anvil"]
      },
      "score": 1
    },
    {
      "id": "test_cargo_check",
      "type": "run_command",
      "params": {
        "command": "cargo check --quiet"
      },
      "timeout": 120,
      "score": 3,
      "requires": ["check_rust_tools", "check_anvil_project"]
    },
    {
      "id": "test_rust_compilation",
      "type": "run_command",
      "params": {
        "command": "rustc --version"
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_rust_tools"]
    },
    {
      "id": "test_cargo_functionality",
      "type": "run_command",
      "params": {
        "command": "cargo --version"
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_rust_tools"]
    },
    {
      "id": "check_openssl_dev",
      "type": "run_command",
      "params": {
        "command": "pkg-config --exists openssl"
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_system_tools"]
    },
    {
      "id": "check_libssl_dev",
      "type": "run_command",
      "params": {
        "command": "pkg-config --exists libssl"
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_system_tools"]
    },
    {
      "id": "check_python_tabulate",
      "type": "run_command",
      "params": {
        "command": "python3 -c \"import tabulate\""
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_python_tools"]
    },
    {
      "id": "test_git_functionality",
      "type": "run_command",
      "params": {
        "command": "git --version"
      },
      "timeout": 10,
      "score": 1,
      "requires": ["check_system_tools"]
    },
    {
      "id": "check_git_repository",
      "type": "dirs_exist",
      "params": {
        "paths": [".git"]
      },
      "score": 1
    }
  ]
}